## 安装Docker Compose
# curl -L https://github.com/docker/compose/releases/download/1.24.1/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
# chmod +x /usr/local/bin/docker-compose
# docker-compose --version
# docker-compose up -d
version: '2.4'
networks:
    br0:
      external: true

services:
  redis7.2.3:                
    container_name: redis7.2.3
    platform: linux/amd64
    image: chunhui2001/alpine:3.19.redis-7.2.3
    hostname: redis7.2.3
    mem_limit: 400m
    ports:
      - 6579:6379
    #entrypoint: ["/bin/sh", "-c", "while true; do echo 1 >/dev/null 2>/dev/null; sleep 1; done"]
    #command: []
    entrypoint: ["entrypoint.sh"]
    command: ["redis-server", "/etc/redis.conf"]
    volumes:
      - ./conf/entrypoint.sh:/usr/local/bin/entrypoint.sh:ro
      - ./conf/redis.conf:/etc/redis.conf:ro
    restart: always
    networks:
      br0:
        ipv4_address: 172.16.197.115

  mysql_single:
    container_name: mysql_8.0
    platform: linux/amd64
    image: chunhui2001/debian_10_dev:mysql_8.0
    cap_add:
      - SYS_NICE
    hostname: mysql_single
    mem_limit: 400m
    environment:
      - MYSQL_ROOT_PASSWORD=Cc
    ports:
      - 3307:3306
    #entrypoint: ["/bin/bash", "-c", "while true; do echo 1 >/dev/null 2>/dev/null; sleep 1; done"]
    volumes:
      - ./my.cnf0:/etc/mysql/my.cnf:ro
      - ./my.cnf:/etc/mysql/mysql.conf.d/mysqld.cnf:ro
      #- ./mysql_data:/var/lib/mysql_data:rw
    restart: always
    networks:
        br0:
          ipv4_address: 172.16.197.23

  mon1:
    container_name: mon1
    #platform: linux/amd64
    image: chunhui2001/mongodb:mongo_8.0.0-rc4
    hostname: mon1
    mem_limit: 400m
    ports:
      - 27017:27017
    #entrypoint: ["/bin/sh", "-c", "while true; do echo 1 >/dev/null 2>/dev/null; sleep 1; done"]
    command: ["--config", "/etc/mongodb.conf"]
    volumes:
      - ./mongod.conf:/etc/mongodb.conf:ro
    restart: always
    networks:
        br0:
          ipv4_address: 172.16.197.51




